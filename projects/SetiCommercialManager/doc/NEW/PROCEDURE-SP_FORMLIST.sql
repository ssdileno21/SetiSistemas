CREATE OR ALTER PROCEDURE SP_FORMLIST (
    PROJECTID INTEGER,
    FORMID INTEGER,
    FORMNAME VARCHAR(100),
    FORMTAG INTEGER, 
    FORMFILEID VARCHAR(10),
    FORMCODE VARCHAR(10)
)
RETURNS (
    PROJECTID_ INTEGER,
    PROJECTNAME_ VARCHAR(100),
    PROJECTDESCRIPTION_ VARCHAR(255),
    PROJECTSTATUS_ CHAR(1),
    PROJECTDTACREATION_ TIMESTAMP, 
    FORMID_ INTEGER,
    FORMNAME_ VARCHAR(100),
    FORMCAPTION_ VARCHAR(100),
    FORMTAG_ INTEGER,
    FORMSTATUS_ CHAR(1),
    FORMPROJECTID_ INTEGER,
    FORMDTACREATION_ TIMESTAMP, 
    FORMFILEID_ VARCHAR(10),
    FORMCODE_ VARCHAR(10),
    FORMPARENTIDPROJECT_ INTEGER,
    FORMPARENTID_ INTEGER)
AS
BEGIN
    FOR
        SELECT
            PROJECTID,
            PROJECTNAME,
            PROJECTDESCRIPTION,
            PROJECTSTATUS,
            PROJECTDTACREATION,
            FORMID,
            FORMNAME,
            FORMCAPTION,
            FORMTAG,
            FORMSTATUS,
            FORMPROJECTID,
            FORMDTACREATION,
            FORMFILEID,
            FORMCODE,
            FORMPARENTIDPROJECT,
            FORMPARENTID
        FROM
        (
        SELECT
                 P.ID AS PROJECTID
                ,P.NAME AS PROJECTNAME
                ,P.DESCRIPTION AS PROJECTDESCRIPTION
                ,P.STATUS AS PROJECTSTATUS
                ,P.DTACREATION AS PROJECTDTACREATION
                ,CASE WHEN FF.ID IS NULL THEN FP.ID WHEN FP.ID IS NULL THEN FF.ID ELSE NULL END AS FORMID
                ,CASE WHEN FF.FORMNAME IS NULL THEN FP.FORMNAME WHEN FP.FORMNAME IS NULL THEN FF.FORMNAME ELSE NULL END AS FORMNAME
                ,CASE WHEN FF.FORMCAPTION IS NULL THEN FP.FORMCAPTION WHEN FP.FORMCAPTION IS NULL THEN FF.FORMCAPTION ELSE NULL END AS FORMCAPTION
                ,CASE WHEN FF.FORMTAG IS NULL THEN FP.FORMTAG WHEN FP.FORMTAG IS NULL THEN FF.FORMTAG ELSE NULL END AS FORMTAG
                ,CASE WHEN FF.FORMSTATUS IS NULL THEN FP.FORMSTATUS WHEN FP.FORMSTATUS IS NULL THEN FF.FORMSTATUS ELSE NULL END AS FORMSTATUS
                ,CASE WHEN FF.IDPROJECT IS NULL THEN FP.IDPROJECT WHEN FP.IDPROJECT IS NULL THEN FF.IDPROJECT ELSE NULL END AS FORMPROJECTID
                ,CASE WHEN FF.DTACREATION IS NULL THEN FP.DTACREATION WHEN FP.DTACREATION IS NULL THEN FF.DTACREATION ELSE NULL END AS FORMDTACREATION
                ,CASE WHEN FF.IDFILE IS NULL THEN FP.IDFILE WHEN FP.IDFILE IS NULL THEN FF.IDFILE ELSE NULL END AS FORMFILEID
                ,CASE WHEN FF.CODE IS NULL THEN FP.CODE WHEN FP.CODE IS NULL THEN FF.CODE ELSE NULL END AS FORMCODE
                ,CASE WHEN FF.PARENTIDPROJECT IS NULL THEN FP.PARENTIDPROJECT WHEN FP.PARENTIDPROJECT IS NULL THEN FF.PARENTIDPROJECT ELSE NULL END FORMPARENTIDPROJECT
                ,CASE WHEN FF.PARENTFORMID IS NULL THEN FP.PARENTFORMID WHEN FP.PARENTFORMID IS NULL THEN FF.PARENTFORMID ELSE NULL END AS FORMPARENTID
        FROM TBPROJECT P
        LEFT JOIN TBFORMSFRAMEWORK FF ON FF.IDPROJECT = P.ID
        LEFT JOIN TBFORMSPROJECT FP ON FP.IDPROJECT = P.ID
        ) AS TAB
        WHERE 1 = 1
        AND TAB.PROJECTID = COALESCE(:PROJECTID,TAB.PROJECTID)
        AND TAB.FORMID = COALESCE(:FORMID,TAB.FORMID)
        AND TAB.FORMNAME = COALESCE(:FORMNAME,TAB.FORMNAME)
        AND TAB.FORMTAG = COALESCE(:FORMTAG, TAB.FORMTAG)
        AND TAB.FORMFILEID = COALESCE(:FORMFILEID, TAB.FORMFILEID)
        AND TAB.FORMCODE = COALESCE(:FORMCODE, TAB.FORMCODE)
        INTO :PROJECTID_, :PROJECTNAME_, :PROJECTDESCRIPTION_, :PROJECTSTATUS_,
             :PROJECTDTACREATION_, :FORMID_, :FORMNAME_, :FORMCAPTION_, :FORMTAG_,
             :FORMSTATUS_, :PROJECTID_, :FORMDTACREATION_, :FORMFILEID_, :FORMCODE_,
             :FORMPARENTIDPROJECT_, :FORMPARENTID_ DO
            SUSPEND;
END
